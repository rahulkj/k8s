---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-manager
rules:
- apiGroups: ["rbac.authorization.k8s.io",""]
  resources: ["clusterrolebindings", "rolebindings", "resourcequotas", "namespaces", "serviceaccounts"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["apps", "autoscaling", "", "certificates.k8s.io", "rbac.authorization.k8s.io", "", "apps", "batch", "extensions", "storage.k8s.io"]
  resources: ["clusterroles", "roles", "daemonsets", "deployments", "replicasets", "statefulsets", "configmaps", "endpoints", "events", "horizontalpodautoscalers", "pods", "pods/log", "podtemplates", "replicationcontrollers", "secrets", "services", "services/proxy", "certificatesigningrequests", "cronjobs", "jobs", "ingresses", "persistentvolumes", "persistentvolumeclaims", "storageclasses"]
  verbs: ["get", "list"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "roles"]
  verbs: ["get", "list", "bind"]
  resourceNames: ["cluster-manager", "cluster-developer", "cluster-auditor", "istio-user", "kubernetes-dashboard", "dashboard-viewonly"]
- apiGroups: ["extensions"]
  resources: ["podsecuritypolicies"]
  resourceNames: ["pks-restricted"]
  verbs: ["use"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-auditor
rules:
- apiGroups: ["apps", "autoscaling", "", "certificates.k8s.io", "batch", "extensions"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets", "configmaps", "endpoints", "events", "horizontalpodautoscalers", "pods", "pods/log", "podtemplates", "replicationcontrollers", "secrets", "services", "services/proxy", "persistentvolumeclaims", "certificatesigningrequests", "cronjobs", "jobs", "ingresses"]
  verbs: ["get", "list"]
- apiGroups: ["rbac.authorization.k8s.io", "", "storage.k8s.io"]
  resources: ["clusterrolebindings", "rolebindings", "clusterroles", "serviceaccounts", "roles", "resourcequotas", "namespaces", "persistentvolumes", "storageclasses"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-developer
rules:
- apiGroups: ["apps", "autoscaling", "", "certificates.k8s.io", "batch", "extensions"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets", "configmaps", "endpoints", "events", "horizontalpodautoscalers", "pods", "pods/log", "pods/exec", "podtemplates", "replicationcontrollers", "secrets", "services", "services/proxy", "persistentvolumeclaims", "certificatesigningrequests", "cronjobs", "jobs", "ingresses"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["rbac.authorization.k8s.io", "", "storage.k8s.io"]
  resources: ["clusterrolebindings", "rolebindings", "clusterroles", "serviceaccounts", "roles", "resourcequotas", "namespaces", "persistentvolumes", "storageclasses"]
  verbs: ["get", "list"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: developer-psp-restricted
rules:
- apiGroups: ["extensions"]
  resources: ["podsecuritypolicies"]
  resourceNames: ["pks-restricted"]
  verbs: ["use"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: developer-psp-privileged
rules:
- apiGroups: ["extensions"]
  resources: ["podsecuritypolicies"]
  resourceNames: ["pks-privileged"]
  verbs: ["use"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-serviceaccount-psp-restricted
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: developer-psp-restricted
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
